{"ast":null,"code":"import axios from \"axios\";\n\n//Actions Types\nexport const LOGIN_REQUEST_STARTED = \"LOGIN_REQUEST_STARTED\";\nexport const LOGIN_REQUEST_SUCCESS = \"LOGIN_REQUEST_SUCCESS\";\nexport const LOGIN_REQUEST_FAILURE = \"LOGIN_REQUEST_FAILURE\";\n\n//Actions\nconst loginRequestStarted = () => ({\n  type: LOGIN_REQUEST_STARTED\n});\nconst loginRequestSuccess = user => ({\n  type: LOGIN_REQUEST_SUCCESS,\n  payload: user\n});\nconst loginRequestFailure = error => ({\n  type: LOGIN_REQUEST_SUCCESS,\n  payload: error\n});\n\n//Action async pour effectuer la connexion\nexport const loginUser = credentials => {\n  return dispatch => {\n    dispatch(loginRequestStarted());\n    axios.post(\"http://localhost:3000/api/v1/user/login\", credentials).then(response => {\n      const user = response.data;\n      if (user) {\n        dispatch(loginRequestSuccess(user));\n      } else {\n        dispatch(loginRequestFailure(\"Invalid email or password\"));\n      }\n    }).catch(error => dispatch(loginRequestFailure(error)));\n  };\n};","map":{"version":3,"names":["axios","LOGIN_REQUEST_STARTED","LOGIN_REQUEST_SUCCESS","LOGIN_REQUEST_FAILURE","loginRequestStarted","type","loginRequestSuccess","user","payload","loginRequestFailure","error","loginUser","credentials","dispatch","post","then","response","data","catch"],"sources":["C:/Users/mathieu/Desktop/Argent-Bank-main/Front-End2/src/store/actions/actions.js"],"sourcesContent":["import axios from \"axios\";\n\n//Actions Types\nexport const LOGIN_REQUEST_STARTED = \"LOGIN_REQUEST_STARTED\";\nexport const LOGIN_REQUEST_SUCCESS = \"LOGIN_REQUEST_SUCCESS\";\nexport const LOGIN_REQUEST_FAILURE = \"LOGIN_REQUEST_FAILURE\";\n\n//Actions\nconst loginRequestStarted = () => ({ type: LOGIN_REQUEST_STARTED });\nconst loginRequestSuccess = (user) => ({\n  type: LOGIN_REQUEST_SUCCESS,\n  payload: user,\n});\nconst loginRequestFailure = (error) => ({\n  type: LOGIN_REQUEST_SUCCESS,\n  payload: error,\n});\n\n//Action async pour effectuer la connexion\nexport const loginUser = (credentials) => {\n  return (dispatch) => {\n    dispatch(loginRequestStarted());\n\n    axios\n      .post(\"http://localhost:3000/api/v1/user/login\", credentials)\n      .then((response) => {\n        const user = response.data;\n        if (user) {\n          dispatch(loginRequestSuccess(user));\n        } else {\n          dispatch(loginRequestFailure(\"Invalid email or password\"));\n        }\n      })\n      .catch((error) => dispatch(loginRequestFailure(error)));\n  };\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAC5D,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAC5D,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;;AAE5D;AACA,MAAMC,mBAAmB,GAAGA,CAAA,MAAO;EAAEC,IAAI,EAAEJ;AAAsB,CAAC,CAAC;AACnE,MAAMK,mBAAmB,GAAIC,IAAI,KAAM;EACrCF,IAAI,EAAEH,qBAAqB;EAC3BM,OAAO,EAAED;AACX,CAAC,CAAC;AACF,MAAME,mBAAmB,GAAIC,KAAK,KAAM;EACtCL,IAAI,EAAEH,qBAAqB;EAC3BM,OAAO,EAAEE;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,SAAS,GAAIC,WAAW,IAAK;EACxC,OAAQC,QAAQ,IAAK;IACnBA,QAAQ,CAACT,mBAAmB,CAAC,CAAC,CAAC;IAE/BJ,KAAK,CACFc,IAAI,CAAC,yCAAyC,EAAEF,WAAW,CAAC,CAC5DG,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMT,IAAI,GAAGS,QAAQ,CAACC,IAAI;MAC1B,IAAIV,IAAI,EAAE;QACRM,QAAQ,CAACP,mBAAmB,CAACC,IAAI,CAAC,CAAC;MACrC,CAAC,MAAM;QACLM,QAAQ,CAACJ,mBAAmB,CAAC,2BAA2B,CAAC,CAAC;MAC5D;IACF,CAAC,CAAC,CACDS,KAAK,CAAER,KAAK,IAAKG,QAAQ,CAACJ,mBAAmB,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3D,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}