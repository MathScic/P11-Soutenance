{"ast":null,"code":"import axios from \"axios\";\nexport const SET_USER = \"SET_USER\";\nexport const EDIT_USER = \"EDIT_USER\";\nexport const USER_FAILURE_CONNECT = \"USER_FAILURE_CONNECT\";\nexport const setUser = user => ({\n  type: SET_USER,\n  payload: user\n});\nexport const editUser = newName => ({\n  type: EDIT_USER,\n  payload: newName\n});\nexport const userFailure = error => ({\n  type: USER_FAILURE_CONNECT,\n  payload: error\n});\nexport const loginUser = credentials => {\n  return dispatch => {\n    dispatch(setUser(credentials.username)); // Supposons que l'identifiant de l'utilisateur soit son nom d'utilisateur\n\n    axios.post(\"http://localhost:3000/api/v1/user/login\", credentials).then(response => {\n      const user = response.data;\n      if (user) {\n        dispatch(editUser(user.name)); // Supposons que le nom d'utilisateur soit stocké dans la propriété \"name\" de la réponse\n      } else {\n        dispatch(userFailure(\"Email ou Mot de passe invalid\"));\n      }\n    }).catch(error => {\n      // Gérer les erreurs de requête\n    });\n  };\n};","map":{"version":3,"names":["axios","SET_USER","EDIT_USER","USER_FAILURE_CONNECT","setUser","user","type","payload","editUser","newName","userFailure","error","loginUser","credentials","dispatch","username","post","then","response","data","name","catch"],"sources":["C:/Users/mathieu/Desktop/Argent-Bank-main/Front-End2/src/store/actions/actions.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const SET_USER = \"SET_USER\";\nexport const EDIT_USER = \"EDIT_USER\";\nexport const USER_FAILURE_CONNECT = \"USER_FAILURE_CONNECT\";\n\nexport const setUser = (user) => ({\n  type: SET_USER,\n  payload: user,\n});\n\nexport const editUser = (newName) => ({\n  type: EDIT_USER,\n  payload: newName,\n});\n\nexport const userFailure = (error) => ({\n  type: USER_FAILURE_CONNECT,\n  payload: error,\n});\n\nexport const loginUser = (credentials) => {\n  return (dispatch) => {\n    dispatch(setUser(credentials.username)); // Supposons que l'identifiant de l'utilisateur soit son nom d'utilisateur\n\n    axios\n      .post(\"http://localhost:3000/api/v1/user/login\", credentials)\n      .then((response) => {\n        const user = response.data;\n        if (user) {\n          dispatch(editUser(user.name)); // Supposons que le nom d'utilisateur soit stocké dans la propriété \"name\" de la réponse\n        } else {\n          dispatch(userFailure(\"Email ou Mot de passe invalid\"));\n        }\n      })\n      .catch((error) => {\n        // Gérer les erreurs de requête\n      });\n  };\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAE1D,OAAO,MAAMC,OAAO,GAAIC,IAAI,KAAM;EAChCC,IAAI,EAAEL,QAAQ;EACdM,OAAO,EAAEF;AACX,CAAC,CAAC;AAEF,OAAO,MAAMG,QAAQ,GAAIC,OAAO,KAAM;EACpCH,IAAI,EAAEJ,SAAS;EACfK,OAAO,EAAEE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAIC,KAAK,KAAM;EACrCL,IAAI,EAAEH,oBAAoB;EAC1BI,OAAO,EAAEI;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAIC,WAAW,IAAK;EACxC,OAAQC,QAAQ,IAAK;IACnBA,QAAQ,CAACV,OAAO,CAACS,WAAW,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC;;IAEzCf,KAAK,CACFgB,IAAI,CAAC,yCAAyC,EAAEH,WAAW,CAAC,CAC5DI,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMb,IAAI,GAAGa,QAAQ,CAACC,IAAI;MAC1B,IAAId,IAAI,EAAE;QACRS,QAAQ,CAACN,QAAQ,CAACH,IAAI,CAACe,IAAI,CAAC,CAAC,CAAC,CAAC;MACjC,CAAC,MAAM;QACLN,QAAQ,CAACJ,WAAW,CAAC,+BAA+B,CAAC,CAAC;MACxD;IACF,CAAC,CAAC,CACDW,KAAK,CAAEV,KAAK,IAAK;MAChB;IAAA,CACD,CAAC;EACN,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}