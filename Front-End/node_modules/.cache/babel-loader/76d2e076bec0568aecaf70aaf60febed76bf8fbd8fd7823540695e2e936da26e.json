{"ast":null,"code":"import axios from \"axios\";\nexport const SET_USER_STARTED = \"SET_USER_STARTED\";\nexport const SET_USER_SUCCES = \"SET_USER_SUCCES\";\nexport const SET_USER_FAILURE = \"SET_USER_FAILURE\";\nexport const SET_USER = \"SET_USER\";\nexport const UPDATE_USERNAME_SUCCESS = \"UPDATE_USERNAME_SUCCESS\";\nexport const UPDATE_USERNAME_FAILURE = \"UPDATE_USERNAME_FAILURE\";\n// export const EDIT_USER = \"EDIT_USER\";\n\nexport const setUserStarted = () => ({\n  type: SET_USER_STARTED\n});\nexport const setUserSuccess = user => ({\n  type: SET_USER_SUCCES,\n  payload: user\n});\nexport const setUserFailure = error => ({\n  type: SET_USER_FAILURE,\n  payload: error\n});\nexport const setUser = user => ({\n  type: SET_USER,\n  payload: user\n});\nexport const UpdateUserNameSucces = username => ({\n  type: UPDATE_USERNAME_SUCCESS,\n  payload: user\n});\n_c = UpdateUserNameSucces;\nexport const loginUSer = credentials => {\n  return dispatch => {\n    dispatch(setUserStarted());\n    axios.post(\"http://localhost:3001/api/v1/user/login\", credentials).then(response => {\n      const user = response.data;\n      if (user) {\n        dispatch(setUserSuccess(user));\n      } else {\n        dispatch(setUserFailure(\"Email ou Mot de passe invalide\"));\n      }\n    }).catch(error => {\n      setUserFailure(error);\n    });\n  };\n};\nexport const userName = (token, username) => {\n  return dispatch => {\n    axios.post(\"http://localhost:3001/api/v1/user/profile\", {\n      username\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {});\n  };\n};\n\n// export const editUser = (newName) => ({\n//   type: EDIT_USER,\n//   payload: newName,\n// });\nvar _c;\n$RefreshReg$(_c, \"UpdateUserNameSucces\");","map":{"version":3,"names":["axios","SET_USER_STARTED","SET_USER_SUCCES","SET_USER_FAILURE","SET_USER","UPDATE_USERNAME_SUCCESS","UPDATE_USERNAME_FAILURE","setUserStarted","type","setUserSuccess","user","payload","setUserFailure","error","setUser","UpdateUserNameSucces","username","_c","loginUSer","credentials","dispatch","post","then","response","data","catch","userName","token","headers","Authorization","$RefreshReg$"],"sources":["C:/Users/scicl/OneDrive/Bureau/ArgentBank-Website-Main-main/Front-End-Test/src/store/actions/actions.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const SET_USER_STARTED = \"SET_USER_STARTED\";\nexport const SET_USER_SUCCES = \"SET_USER_SUCCES\";\nexport const SET_USER_FAILURE = \"SET_USER_FAILURE\";\nexport const SET_USER = \"SET_USER\";\nexport const UPDATE_USERNAME_SUCCESS = \"UPDATE_USERNAME_SUCCESS\";\nexport const UPDATE_USERNAME_FAILURE = \"UPDATE_USERNAME_FAILURE\";\n// export const EDIT_USER = \"EDIT_USER\";\n\nexport const setUserStarted = () => ({\n  type: SET_USER_STARTED,\n});\n\nexport const setUserSuccess = (user) => ({\n  type: SET_USER_SUCCES,\n  payload: user,\n});\n\nexport const setUserFailure = (error) => ({\n  type: SET_USER_FAILURE,\n  payload: error,\n});\n\nexport const setUser = (user) => ({\n  type: SET_USER,\n  payload: user,\n});\n\nexport const UpdateUserNameSucces = (username) => ({\n  type: UPDATE_USERNAME_SUCCESS,\n  payload:user\n})\n\nexport const loginUSer = (credentials) => {\n  return (dispatch) => {\n    dispatch(setUserStarted());\n\n    axios\n      .post(\"http://localhost:3001/api/v1/user/login\", credentials)\n      .then((response) => {\n        const user = response.data;\n        if (user) {\n          dispatch(setUserSuccess(user));\n        } else {\n          dispatch(setUserFailure(\"Email ou Mot de passe invalide\"));\n        }\n      })\n      .catch((error) => {\n        setUserFailure(error);\n      });\n  };\n};\n\nexport const userName = (token, username) => {\n  return (dispatch) => {\n    axios\n      .post(\n        \"http://localhost:3001/api/v1/user/profile\",\n        { username },\n        { headers: { Authorization: `Bearer ${token}` } }\n      )\n      .then((response) => {});\n  };\n};\n\n// export const editUser = (newName) => ({\n//   type: EDIT_USER,\n//   payload: newName,\n// });\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAChD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,uBAAuB,GAAG,yBAAyB;AAChE,OAAO,MAAMC,uBAAuB,GAAG,yBAAyB;AAChE;;AAEA,OAAO,MAAMC,cAAc,GAAGA,CAAA,MAAO;EACnCC,IAAI,EAAEP;AACR,CAAC,CAAC;AAEF,OAAO,MAAMQ,cAAc,GAAIC,IAAI,KAAM;EACvCF,IAAI,EAAEN,eAAe;EACrBS,OAAO,EAAED;AACX,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAIC,KAAK,KAAM;EACxCL,IAAI,EAAEL,gBAAgB;EACtBQ,OAAO,EAAEE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,OAAO,GAAIJ,IAAI,KAAM;EAChCF,IAAI,EAAEJ,QAAQ;EACdO,OAAO,EAAED;AACX,CAAC,CAAC;AAEF,OAAO,MAAMK,oBAAoB,GAAIC,QAAQ,KAAM;EACjDR,IAAI,EAAEH,uBAAuB;EAC7BM,OAAO,EAACD;AACV,CAAC,CAAC;AAAAO,EAAA,GAHWF,oBAAoB;AAKjC,OAAO,MAAMG,SAAS,GAAIC,WAAW,IAAK;EACxC,OAAQC,QAAQ,IAAK;IACnBA,QAAQ,CAACb,cAAc,CAAC,CAAC,CAAC;IAE1BP,KAAK,CACFqB,IAAI,CAAC,yCAAyC,EAAEF,WAAW,CAAC,CAC5DG,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMb,IAAI,GAAGa,QAAQ,CAACC,IAAI;MAC1B,IAAId,IAAI,EAAE;QACRU,QAAQ,CAACX,cAAc,CAACC,IAAI,CAAC,CAAC;MAChC,CAAC,MAAM;QACLU,QAAQ,CAACR,cAAc,CAAC,gCAAgC,CAAC,CAAC;MAC5D;IACF,CAAC,CAAC,CACDa,KAAK,CAAEZ,KAAK,IAAK;MAChBD,cAAc,CAACC,KAAK,CAAC;IACvB,CAAC,CAAC;EACN,CAAC;AACH,CAAC;AAED,OAAO,MAAMa,QAAQ,GAAGA,CAACC,KAAK,EAAEX,QAAQ,KAAK;EAC3C,OAAQI,QAAQ,IAAK;IACnBpB,KAAK,CACFqB,IAAI,CACH,2CAA2C,EAC3C;MAAEL;IAAS,CAAC,EACZ;MAAEY,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASF,KAAM;MAAE;IAAE,CAClD,CAAC,CACAL,IAAI,CAAEC,QAAQ,IAAK,CAAC,CAAC,CAAC;EAC3B,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AAAA,IAAAN,EAAA;AAAAa,YAAA,CAAAb,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}