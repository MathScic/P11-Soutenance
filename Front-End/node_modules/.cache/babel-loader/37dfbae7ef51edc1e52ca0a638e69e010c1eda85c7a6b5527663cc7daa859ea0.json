{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { connect } from \"react-redux\";\n// import { editUser } from \"../../store/actions/actions\";\n// import \"./EditName.css\";\n\n// const EditName = ({ userName, editUser }) => {\n//   const [newName, setNewName] = useState(\"\");\n//   // Fonction pr gérer changement de nom\n//   const handleChangeName = (e) => {\n//     setNewName(e.target.value);\n//   };\n\n//   // Fonction pr gérer soumission form\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     editUser(newName);\n//     setNewName(\"\");\n//   };\n\n//   return (\n//     <div className=\"form-container\">\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter New Name\"\n//           value={newName}\n//           onChange={handleChangeName}\n//         />\n//         <div></div>\n//         <button type=\"submit\" className=\"container\">\n//           Save\n//         </button>\n//         <button type=\"cancel\" className=\"container\">\n//           Cancel\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // Fonction mapStateToProps pour mapper l'état du store Redux aux propriétés du composant + récup nom user dans store redux\n// const mapStateToProps = (state) => ({\n//   userName: state.user.name,\n// });\n\n// // Définition de l'objet mapDispatchToProps pour mapper l'action editUser aux propriétés du composant\n// const mapDispatchToProps = {\n//   editUser,\n// };\n\n// // Connecte le composant EditName au store Redux en utilisant connect\n// export default connect(mapStateToProps, mapDispatchToProps)(EditName);","map":{"version":3,"names":[],"sources":["C:/Users/scicl/OneDrive/Bureau/ArgentBank-Website-Main-main/Front-End-Test/src/components/editeName/EditName.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { connect } from \"react-redux\";\n// import { editUser } from \"../../store/actions/actions\";\n// import \"./EditName.css\";\n\n// const EditName = ({ userName, editUser }) => {\n//   const [newName, setNewName] = useState(\"\");\n//   // Fonction pr gérer changement de nom\n//   const handleChangeName = (e) => {\n//     setNewName(e.target.value);\n//   };\n\n//   // Fonction pr gérer soumission form\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     editUser(newName);\n//     setNewName(\"\");\n//   };\n\n//   return (\n//     <div className=\"form-container\">\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Enter New Name\"\n//           value={newName}\n//           onChange={handleChangeName}\n//         />\n//         <div></div>\n//         <button type=\"submit\" className=\"container\">\n//           Save\n//         </button>\n//         <button type=\"cancel\" className=\"container\">\n//           Cancel\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// // Fonction mapStateToProps pour mapper l'état du store Redux aux propriétés du composant + récup nom user dans store redux\n// const mapStateToProps = (state) => ({\n//   userName: state.user.name,\n// });\n\n// // Définition de l'objet mapDispatchToProps pour mapper l'action editUser aux propriétés du composant\n// const mapDispatchToProps = {\n//   editUser,\n// };\n\n// // Connecte le composant EditName au store Redux en utilisant connect\n// export default connect(mapStateToProps, mapDispatchToProps)(EditName);\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}